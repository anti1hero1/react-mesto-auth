{"ast":null,"code":"const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: '9b1777f3-98dd-4967-afba-6faae59432d3',\n    'content-type': 'application/json'\n  }\n});\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._checkResponse(res));\n  }\n}\nexport default api;","map":{"version":3,"names":["api","Api","url","headers","authorization","constructor","config","_url","_headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getCards","addNewCard","data","method","body","JSON","stringify","deleteCard","cardId","getCardLike","deleteCardLike","changeAvatar","changeUserInfo"],"sources":["/Users/anti1hero/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: '9b1777f3-98dd-4967-afba-6faae59432d3',\n    'content-type': 'application/json'\n  },\n});\n\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) =>\n      this._checkResponse(res)\n    );\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  changeUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then((res) => this._checkResponse(res)\n    );\n  }\n}\n\nexport default api;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}