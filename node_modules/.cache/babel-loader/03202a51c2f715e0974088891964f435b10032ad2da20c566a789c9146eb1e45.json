{"ast":null,"code":"export const BASE_URL = \" https://auth.nomoreparties.co\";\nfunction handleReply(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\nexport function register(data) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(handleReply);\n}\nexport function login(data) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(handleReply);\n}\nexport function checkToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(handleReply);\n}","map":{"version":3,"names":["BASE_URL","handleReply","res","ok","json","Promise","reject","status","register","data","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token","Authorization"],"sources":["/Users/anti1hero/Desktop/dev/react-mesto-auth/src/utils/apiAuth.js"],"sourcesContent":["export const BASE_URL = \" https://auth.nomoreparties.co\";\n\n\nfunction handleReply(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport function register(data) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(handleReply);\n}\n\nexport function login(data) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(handleReply);\n}\n\n\nexport function checkToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(handleReply);\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gCAAgC;AAGxD,SAASC,WAAWA,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;AAEA,OAAO,SAASC,QAAQA,CAACC,IAAI,EAAE;EAC7B,OAAOC,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC,CAACO,IAAI,CAACf,WAAW,CAAC;AACtB;AAEA,OAAO,SAASgB,KAAKA,CAACR,IAAI,EAAE;EAC1B,OAAOC,KAAK,CAAE,GAAEV,QAAS,SAAQ,EAAE;IACjCW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC,CAACO,IAAI,CAACf,WAAW,CAAC;AACtB;AAGA,OAAO,SAASiB,UAAUA,CAACC,KAAK,EAAE;EAChC,OAAOT,KAAK,CAAE,GAAEV,QAAS,WAAU,EAAE;IACnCW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAACf,WAAW,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}