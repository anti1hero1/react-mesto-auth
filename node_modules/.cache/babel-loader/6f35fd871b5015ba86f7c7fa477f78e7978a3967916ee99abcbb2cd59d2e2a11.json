{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nfunction useFormValidation() {\n  _s();\n  const [isInputValid, setInputValid] = React.useState({});\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setValid] = React.useState(false);\n  console.log(isValid);\n  function handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    const validationMessage = e.target.validationMessage;\n    const valid = e.target.validity.valid;\n    const form = e.target.form;\n    setValues(oldValues => {\n      return {\n        ...oldValues,\n        [name]: value\n      };\n    });\n    setErrors(oldErrors => {\n      return {\n        ...oldErrors,\n        [name]: validationMessage\n      };\n    });\n    setInputValid(oldInputValid => {\n      return {\n        ...oldInputValid,\n        [name]: valid\n      };\n    });\n    setValid(oldValid => {\n      return {\n        ...oldValid,\n        [name]: valid\n      };\n    });\n  }\n  return {\n    handleChange\n  };\n}\n_s(useFormValidation, \"ZgkLW13mWa4yhjWqCkmb5hC2wmg=\");\nexport default useFormValidation;","map":{"version":3,"names":["React","useFormValidation","_s","isInputValid","setInputValid","useState","values","setValues","errors","setErrors","isValid","setValid","console","log","handleChange","e","name","target","value","validationMessage","valid","validity","form","oldValues","oldErrors","oldInputValid","oldValid"],"sources":["/Users/anti1hero/Desktop/dev/mesto-react/src/utils/useFormValidation.js"],"sourcesContent":["import React from \"react\"\n\nfunction useFormValidation() {\n  const [isInputValid, setInputValid] = React.useState({})\n  const [values, setValues] = React.useState({})\n  const [errors, setErrors] = React.useState({})\n  const [isValid, setValid] = React.useState(false)\n  console.log(isValid)\n  function handleChange(e) {\n    const name = e.target.name\n    const value = e.target.value\n    const validationMessage = e.target.validationMessage\n    const valid = e.target.validity.valid\n    const form = e.target.form\n    \n    setValues((oldValues)=>{\n      return { ...oldValues ,[name]: value }\n    })\n\n    setErrors((oldErrors) => {\n      return { ...oldErrors, [name]: validationMessage }\n    })\n\n    setInputValid((oldInputValid) => {\n      return { ...oldInputValid, [name]: valid }\n    })\n\n    setValid((oldValid) => {\n      return { ...oldValid, [name]: valid }\n    })\n\n\n  }\n\n  return { handleChange }\n}\n\nexport default useFormValidation"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,aAAa,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACK,OAAO,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC;EACjDO,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpB,SAASI,YAAYA,CAACC,CAAC,EAAE;IACvB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACD,IAAI;IAC1B,MAAME,KAAK,GAAGH,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5B,MAAMC,iBAAiB,GAAGJ,CAAC,CAACE,MAAM,CAACE,iBAAiB;IACpD,MAAMC,KAAK,GAAGL,CAAC,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK;IACrC,MAAME,IAAI,GAAGP,CAAC,CAACE,MAAM,CAACK,IAAI;IAE1Bf,SAAS,CAAEgB,SAAS,IAAG;MACrB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACP,IAAI,GAAGE;MAAM,CAAC;IACxC,CAAC,CAAC;IAEFT,SAAS,CAAEe,SAAS,IAAK;MACvB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACR,IAAI,GAAGG;MAAkB,CAAC;IACpD,CAAC,CAAC;IAEFf,aAAa,CAAEqB,aAAa,IAAK;MAC/B,OAAO;QAAE,GAAGA,aAAa;QAAE,CAACT,IAAI,GAAGI;MAAM,CAAC;IAC5C,CAAC,CAAC;IAEFT,QAAQ,CAAEe,QAAQ,IAAK;MACrB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACV,IAAI,GAAGI;MAAM,CAAC;IACvC,CAAC,CAAC;EAGJ;EAEA,OAAO;IAAEN;EAAa,CAAC;AACzB;AAACZ,EAAA,CAjCQD,iBAAiB;AAmC1B,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}